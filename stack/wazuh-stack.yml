---
version: "3.9"

x-common-deploy: &common-deploy
  restart_policy:
    condition: on-failure
  update_config:
    parallelism: 1
    delay: 10s
    failure_action: rollback
    order: start-first
  rollback_config:
    parallelism: 0
    order: stop-first

networks:
  front_net:
    external: true
    name: front_net
  back_net:
    external: true
    name: back_net

volumes:
  wazuh_indexer_data:
    external: true
    name: wazuh_indexer_data
  wazuh_manager_data:
    external: true
    name: wazuh_manager_data
  traefik_letsencrypt:
    external: true
    name: traefik_letsencrypt

secrets:
  wazuh_indexer_password:
    external: true
  wazuh_api_password:
    external: true
  wazuh_dashboard_password:
    external: true
  traefik_acme_email:
    external: true

configs:
  traefik_dynamic.yml:
    external: true

services:
  traefik:
    image: traefik:2.11.2
    command:
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.emailFile=/run/secrets/traefik_acme_email"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--providers.file.filename=/etc/traefik/dynamic/traefik_dynamic.yml"
      - "--log.level=INFO"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    secrets:
      - source: traefik_acme_email
        target: traefik_acme_email
        mode: 0400
    configs:
      - source: traefik_dynamic.yml
        target: /etc/traefik/dynamic/traefik_dynamic.yml
        mode: 0444
    deploy:
      <<: *common-deploy
      labels:
        - "traefik.enable=true"
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 512M
    networks:
      - front_net

  wazuh-indexer:
    image: wazuh/wazuh-indexer:4.7.2
    environment:
      - "OPENSEARCH_INITIAL_ADMIN_PASSWORD_FILE=/run/secrets/wazuh_indexer_password"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
    command: >
      sh -c '
      export OPENSEARCH_INITIAL_ADMIN_PASSWORD=$(cat /run/secrets/wazuh_indexer_password);
      /entrypoint.sh'
    volumes:
      - wazuh_indexer_data:/var/lib/wazuh-indexer
    secrets:
      - source: wazuh_indexer_password
        target: wazuh_indexer_password
        mode: 0400
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    deploy:
      <<: *common-deploy
      resources:
        limits:
          memory: 2G
      placement:
        constraints:
          - node.role == manager
    networks:
      - back_net

  wazuh-manager:
    image: wazuh/wazuh-manager:4.7.2
    environment:
      - "INDEXER_URL=https://wazuh-indexer:9200"
      - "INDEXER_USERNAME=admin"
      - "INDEXER_PASSWORD_FILE=/run/secrets/wazuh_indexer_password"
      - "API_USERNAME={{ vault_wazuh_api_username | default('wazuh-api') }}"
      - "API_PASSWORD_FILE=/run/secrets/wazuh_api_password"
      - "WAZUH_API_PORT=55000"
    command: >
      sh -c '
      export INDEXER_PASSWORD=$(cat /run/secrets/wazuh_indexer_password);
      export API_PASSWORD=$(cat /run/secrets/wazuh_api_password);
      /entrypoint.sh'
    volumes:
      - wazuh_manager_data:/var/ossec
    secrets:
      - source: wazuh_indexer_password
        target: wazuh_indexer_password
        mode: 0400
      - source: wazuh_api_password
        target: wazuh_api_password
        mode: 0400
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:55000/"]
      interval: 30s
      timeout: 5s
      retries: 5
    deploy:
      <<: *common-deploy
      resources:
        limits:
          memory: 2G
      placement:
        constraints:
          - node.role == manager
    networks:
      - back_net

  wazuh-dashboard:
    image: wazuh/wazuh-dashboard:4.7.2
    environment:
      - "OPENSEARCH_URL=https://wazuh-indexer:9200"
      - "OPENSEARCH_USERNAME=admin"
      - "OPENSEARCH_PASSWORD_FILE=/run/secrets/wazuh_indexer_password"
      - "DASHBOARD_USERNAME=admin"
      - "DASHBOARD_PASSWORD_FILE=/run/secrets/wazuh_dashboard_password"
      - "WAZUH_API_URL=http://wazuh-manager:55000"
      - "WAZUH_API_USERNAME={{ vault_wazuh_api_username | default('wazuh-api') }}"
      - "WAZUH_API_PASSWORD_FILE=/run/secrets/wazuh_api_password"
    command: >
      sh -c '
      export OPENSEARCH_PASSWORD=$(cat /run/secrets/wazuh_indexer_password);
      export DASHBOARD_PASSWORD=$(cat /run/secrets/wazuh_dashboard_password);
      export WAZUH_API_PASSWORD=$(cat /run/secrets/wazuh_api_password);
      /entrypoint.sh'
    depends_on:
      - wazuh-indexer
      - wazuh-manager
    secrets:
      - source: wazuh_indexer_password
        target: wazuh_indexer_password
        mode: 0400
      - source: wazuh_api_password
        target: wazuh_api_password
        mode: 0400
      - source: wazuh_dashboard_password
        target: wazuh_dashboard_password
        mode: 0400
    deploy:
      <<: *common-deploy
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.wazuh.rule=Host(`{{ env \"WAZUH_DOMAIN\" | default \"wazuh.example.com\" }}`)"
        - "traefik.http.routers.wazuh.entrypoints=websecure"
        - "traefik.http.routers.wazuh.tls.certresolver=le"
        - "traefik.http.routers.wazuh.middlewares=security-headers@file"
        - "traefik.http.services.wazuh.loadbalancer.server.port=5601"
      resources:
        limits:
          memory: 1G
      placement:
        constraints:
          - node.role == manager
    networks:
      - front_net
      - back_net